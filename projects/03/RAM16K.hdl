// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux4Way(in=load, sel=address[0..1],
             a=choose1, b=choose2,
             c=choose3, d=choose4);

    BRAM4K(in=in, load=choose1, address=address[2..13], out=ram1);
    BRAM4K(in=in, load=choose2, address=address[2..13], out=ram2);
    BRAM4K(in=in, load=choose3, address=address[2..13], out=ram3);
    BRAM4K(in=in, load=choose4, address=address[2..13], out=ram4);

    Mux4Way16(a=ram1, b=ram2, c=ram3, d=ram4,
              sel=address[0..1], out=out);

}
