// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load, sel=address[0..2],
             a=choose1, b=choose2, c=choose3,
             d=choose4, e=choose5, f=choose6,
             g=choose7, h=choose8);

    BRAM64(in=in, load=choose1, address=address[3..8], out=ram1);
    BRAM64(in=in, load=choose2, address=address[3..8], out=ram2);
    BRAM64(in=in, load=choose3, address=address[3..8], out=ram3);
    BRAM64(in=in, load=choose4, address=address[3..8], out=ram4);
    BRAM64(in=in, load=choose5, address=address[3..8], out=ram5);
    BRAM64(in=in, load=choose6, address=address[3..8], out=ram6);
    BRAM64(in=in, load=choose7, address=address[3..8], out=ram7);
    BRAM64(in=in, load=choose8, address=address[3..8], out=ram8);

    Mux8Way16(a=ram1, b=ram2, c=ram3,
              d=ram4, e=ram5, f=ram6,
              g=ram7, h=ram8,
              sel=address[0..2], out=out);

}
